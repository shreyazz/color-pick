{"ast":null,"code":"var _jsxFileName = \"D:\\\\software\\\\reactTut\\\\awesomeapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport colors from \"./colors\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { HiClipboardCopy } from \"react-icons/hi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const teal = \"#a5f1d8\";\n  const [color, setColor] = useState(teal);\n  const [title, setTitle] = useState(teal);\n  const randomNumber = Math.floor(Math.random() * colors.length);\n  const hexColors = [];\n\n  const bgChange = () => {\n    setTitle(colors[randomNumber].name);\n    setColor(colors[randomNumber].hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: bgChange,\n        children: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n        text: colors[randomNumber].hex,\n        children: /*#__PURE__*/_jsxDEV(HiClipboardCopy, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"KWna5yAezXRbbP7a8TiYGMDeg0g=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/software/reactTut/awesomeapp/src/App.jsx"],"names":["React","useState","colors","CopyToClipboard","HiClipboardCopy","App","teal","color","setColor","title","setTitle","randomNumber","Math","floor","random","length","hexColors","bgChange","name","hex","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,eAAT,QAAgC,gBAAhC;;;AACA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAMC,IAAI,GAAG,SAAb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACK,IAAD,CAAlC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACK,IAAD,CAAlC;AAEA,QAAMK,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,MAAM,CAACa,MAAlC,CAArB;AACA,QAAMC,SAAS,GAAG,EAAlB;;AACA,QAAMC,QAAQ,GAAG,MAAM;AACrBP,IAAAA,QAAQ,CAACR,MAAM,CAACS,YAAD,CAAN,CAAqBO,IAAtB,CAAR;AACAV,IAAAA,QAAQ,CAACN,MAAM,CAACS,YAAD,CAAN,CAAqBQ,GAAtB,CAAR;AACD,GAHD;;AAIA,sBACE;AAAA,2BACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAEb;AADZ,OADT;AAAA,8BAKE;AAAQ,QAAA,OAAO,EAAEU,QAAjB;AAAA,kBAA4BV;AAA5B;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEL,MAAM,CAACS,YAAD,CAAN,CAAqBQ,GAA5C;AAAA,+BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CAzBM;;GAAMd,G;;KAAAA,G","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./index.css\";\r\nimport colors from \"./colors\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { HiClipboardCopy } from \"react-icons/hi\";\r\nexport const App = () => {\r\n  const teal = \"#a5f1d8\";\r\n  const [color, setColor] = useState(teal);\r\n  const [title, setTitle] = useState(teal);\r\n\r\n  const randomNumber = Math.floor(Math.random() * colors.length);\r\n  const hexColors = []\r\n  const bgChange = () => {\r\n    setTitle(colors[randomNumber].name);\r\n    setColor(colors[randomNumber].hex);\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          backgroundColor: color,\r\n        }}\r\n      >\r\n        <button onClick={bgChange}>{color}</button>\r\n        <CopyToClipboard text={colors[randomNumber].hex}>\r\n          <HiClipboardCopy />\r\n        </CopyToClipboard>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}